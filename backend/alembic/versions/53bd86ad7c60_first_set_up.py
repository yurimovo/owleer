"""first set up

Revision ID: 53bd86ad7c60
Revises: 
Create Date: 2021-09-03 14:59:20.408860

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "53bd86ad7c60"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "companies",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("image_url", sa.String(), nullable=True),
        sa.Column("uid", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_companies_name"), "companies", ["name"], unique=False)
    op.create_index(op.f("ix_companies_uid"), "companies", ["uid"], unique=True)
    op.create_table(
        "projects",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("type", sa.String(), nullable=True),
        sa.Column("data", postgresql.JSON(astext_type=sa.Text()), nullable=True),
        sa.Column("country", sa.String(), nullable=True),
        sa.Column("city", sa.String(), nullable=True),
        sa.Column("floors_above_level", sa.Integer(), nullable=True),
        sa.Column("floors_behind_level", sa.Integer(), nullable=True),
        sa.Column("site_size", sa.Float(), nullable=True),
        sa.Column("uid", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_projects_uid"), "projects", ["uid"], unique=True)
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("role", sa.String(), nullable=True),
        sa.Column("phone", sa.String(), nullable=True),
        sa.Column("auth_token", sa.String(), nullable=True),
        sa.Column("image_url", sa.String(), nullable=True),
        sa.Column("data", postgresql.JSON(astext_type=sa.Text()), nullable=True),
        sa.Column("uid", sa.String(), nullable=True),
        sa.Column("create_date", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_auth_token"), "users", ["auth_token"], unique=True)
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_uid"), "users", ["uid"], unique=True)
    op.create_table(
        "company_project_associations",
        sa.Column("company_id", sa.Integer(), nullable=False),
        sa.Column("project_id", sa.Integer(), nullable=False),
        sa.Column("uid", sa.String(), nullable=True),
        sa.Column("is_admin", sa.Boolean(), nullable=True),
        sa.Column("create_date", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["companies.id"],
        ),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["projects.id"],
        ),
        sa.PrimaryKeyConstraint("company_id", "project_id"),
    )
    op.create_index(
        op.f("ix_company_project_associations_uid"),
        "company_project_associations",
        ["uid"],
        unique=True,
    )
    op.create_table(
        "project_gourps",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("uid", sa.String(), nullable=True),
        sa.Column("project_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["projects.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_project_gourps_uid"), "project_gourps", ["uid"], unique=True
    )
    op.create_table(
        "project_phases",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("data", postgresql.JSON(astext_type=sa.Text()), nullable=True),
        sa.Column("project_id", sa.Integer(), nullable=True),
        sa.Column("uid", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["projects.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_project_phases_uid"), "project_phases", ["uid"], unique=True
    )
    op.create_table(
        "user_company_associations",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("company_id", sa.Integer(), nullable=False),
        sa.Column("uid", sa.String(), nullable=True),
        sa.Column("is_admin", sa.Boolean(), nullable=True),
        sa.Column("create_date", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["companies.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "company_id"),
    )
    op.create_index(
        op.f("ix_user_company_associations_uid"),
        "user_company_associations",
        ["uid"],
        unique=True,
    )
    op.create_table(
        "user_project_associations",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("project_id", sa.Integer(), nullable=False),
        sa.Column("uid", sa.String(), nullable=True),
        sa.Column("is_admin", sa.Boolean(), nullable=True),
        sa.Column("create_date", sa.DateTime(), nullable=True),
        sa.Column(
            "additional_user_data",
            postgresql.JSON(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["projects.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "project_id"),
    )
    op.create_index(
        op.f("ix_user_project_associations_uid"),
        "user_project_associations",
        ["uid"],
        unique=True,
    )
    op.create_table(
        "project_group_roles",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("uid", sa.String(), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("group_id", sa.Integer(), nullable=True),
        sa.Column("company_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["companies.id"],
        ),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["project_gourps.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_project_group_roles_uid"), "project_group_roles", ["uid"], unique=True
    )
    op.create_table(
        "user_group_role_associations",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("role_id", sa.Integer(), nullable=False),
        sa.Column("uid", sa.String(), nullable=True),
        sa.Column("create_date", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["project_group_roles.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "role_id"),
    )
    op.create_index(
        op.f("ix_user_group_role_associations_uid"),
        "user_group_role_associations",
        ["uid"],
        unique=True,
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_user_group_role_associations_uid"),
        table_name="user_group_role_associations",
    )
    op.drop_table("user_group_role_associations")
    op.drop_index(op.f("ix_project_group_roles_uid"), table_name="project_group_roles")
    op.drop_table("project_group_roles")
    op.drop_index(
        op.f("ix_user_project_associations_uid"), table_name="user_project_associations"
    )
    op.drop_table("user_project_associations")
    op.drop_index(
        op.f("ix_user_company_associations_uid"), table_name="user_company_associations"
    )
    op.drop_table("user_company_associations")
    op.drop_index(op.f("ix_project_phases_uid"), table_name="project_phases")
    op.drop_table("project_phases")
    op.drop_index(op.f("ix_project_gourps_uid"), table_name="project_gourps")
    op.drop_table("project_gourps")
    op.drop_index(
        op.f("ix_company_project_associations_uid"),
        table_name="company_project_associations",
    )
    op.drop_table("company_project_associations")
    op.drop_index(op.f("ix_users_uid"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_index(op.f("ix_users_auth_token"), table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_projects_uid"), table_name="projects")
    op.drop_table("projects")
    op.drop_index(op.f("ix_companies_uid"), table_name="companies")
    op.drop_index(op.f("ix_companies_name"), table_name="companies")
    op.drop_table("companies")
    # ### end Alembic commands ###
